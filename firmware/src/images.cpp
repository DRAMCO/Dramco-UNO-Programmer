#include "optiLoader.h"

const image_t PROGMEM image_328 = {
    // Sketch name, only used for serial printing
    {"optiboot_atmega328.hex"},
    // Chip name, only used for serial printing
    {"atmega328P"},
    // Signature bytes for 328P
    0x950F,
    // Programming fuses, written before writing to flash. Fuses set to
    // zero are untouched.
    {0x3F, 0xFF, 0xDE, 0x05}, // {lock, low, high, extended}
    // Normal fuses, written after writing to flash (but before
    // verifying). Fuses set to zero are untouched.
    {0x0F, 0xFF, 0xDE, 0x07}, // {lock, low, high, extended} 
    // https://eleccelerator.com/fusecalc/fusecalc.php?chip=atmega328p&LOW=FF&HIGH=DE&EXTENDED=07&LOCKBIT=3F
    // Fuse verify mask. Any bits set to zero in these values are
    // ignored while verifying the fuses after writing them. All (and
    // only) bits that are unused for this atmega chip should be zero
    // here.
    {0x3F, 0xFF, 0xFF, 0x07}, // {lock, low, high, extended}
    // size of chip flash in bytes
    32768,
    // size in bytes of flash page
    128,
    // The actual image to flash. This can be copy-pasted as-is from a
    // .hex file. If you do, replace all lines below starting with a
    // colon, but make sure to keep the start and end markers {R"( and
    // )"} in place.
    {R"(
:100000000C945C000C946E000C946E000C946E00CA
:100010000C946E000C946E000C946E000C946E00A8
:100020000C946E000C946E000C946E000C946E0098
:100030000C946E000C946E000C946E000C946E0088
:100040000C9413010C946E000C946E000C946E00D2
:100050000C946E000C946E000C946E000C946E0068
:100060000C946E000C946E00000000002400270029
:100070002A0000000000250028002B0004040404CE
:100080000404040402020202020203030303030342
:10009000010204081020408001020408102001021F
:1000A00004081020000000080002010000030407FB
:1000B000000000000000000011241FBECFEFD8E0B8
:1000C000DEBFCDBF21E0A0E0B1E001C01D92A930AC
:1000D000B207E1F70E945D010C94CC010C94000082
:1000E000E8EAF0E02491E4E9F0E09491E0E8F0E05F
:1000F000E491EE23C9F0222339F0233001F1A8F472
:10010000213019F1223029F1F0E0EE0FFF1FEE58F7
:10011000FF4FA591B4912FB7F894EC91811126C0AF
:1001200090959E239C932FBF08952730A9F02830E7
:10013000C9F0243049F7209180002F7D03C0209121
:1001400080002F7720938000DFCF24B52F7724BD48
:10015000DBCF24B52F7DFBCF2091B0002F772093EC
:10016000B000D2CF2091B0002F7DF9CF9E2BDACFF7
:100170003FB7F8948091050190910601A091070185
:10018000B091080126B5A89B05C02F3F19F0019634
:10019000A11DB11D3FBFBA2FA92F982F8827BC01E1
:1001A000CD01620F711D811D911D42E0660F771F09
:1001B000881F991F4A95D1F708958F929F92AF9209
:1001C000BF92CF92DF92EF92FF920E94B8004B0154
:1001D0005C0188EEC82E83E0D82EE12CF12C0E9421
:1001E000B800681979098A099B09683E734081053E
:1001F0009105A8F321E0C21AD108E108F10888EEC0
:10020000880E83E0981EA11CB11CC114D104E10426
:10021000F10429F7FF90EF90DF90CF90BF90AF905F
:100220009F908F9008951F920F920FB60F921124F6
:100230002F933F938F939F93AF93BF93809101012F
:1002400090910201A0910301B0910401309100014D
:1002500023E0230F2D3758F50196A11DB11D2093E2
:1002600000018093010190930201A0930301B093D8
:1002700004018091050190910601A0910701B091C0
:1002800008010196A11DB11D8093050190930601FF
:10029000A0930701B0930801BF91AF919F918F91F7
:1002A0003F912F910F900FBE0F901F90189526E849
:1002B000230F0296A11DB11DD2CF789484B5826020
:1002C00084BD84B5816084BD85B5826085BD85B5FA
:1002D000816085BD80916E00816080936E00109278
:1002E00081008091810082608093810080918100F3
:1002F0008160809381008091800081608093800084
:100300008091B10084608093B1008091B0008160E1
:100310008093B00080917A00846080937A0080910D
:100320007A00826080937A0080917A008160809365
:100330007A0080917A00806880937A001092C100E0
:10034000E4E9F0E02491E0E8F0E08491882399F07A
:1003500090E0880F991FFC01E859FF4FA591B491D7
:10036000FC01EE58FF4F859194918FB7F894EC9172
:10037000E22BEC938FBFC0E0D0E081E00E947000E0
:100380000E94DD0080E00E9470000E94DD00209746
:0C039000A1F30E940000F1CFF894FFCF11
:00000001FF
    )"},
    {R"(
:107E0000112484B714BE81FFE4D082E08093C000C7
:107E100088E18093C10096E09093C20090E1909336
:107E2000C400809360008EE080936000549AC0E0AC
:107E3000D0E04C9AA9D0813481F4A6D0182FB0D0CC
:107E4000123819F484E099D095C0113819F484E0FF
:107E500094D090C083E091D08DC0823419F484E135
:107E6000ABD088C0853419F485E0A6D083C08535B1
:107E700049F48AD0C82F88D0D0E0D82BCC0FDD1F92
:107E80008FD078C0863529F484E096D080E075D014
:107E900071C0843609F042C077D076D0F82E74D005
:107EA000C11580E7D80738F483E0FE0187BFE89565
:107EB00000E011E002C000E011E066D0F80181931B
:107EC0008F01FE12FACFC115F0E7DF0720F083E043
:107ED000FE0187BFE89564D007B600FCFDCFFE0128
:107EE000A0E0B1E08C9111962C91119790E0922B2B
:107EF00021E00C0127BFE895112432961296A03894
:107F000081E0B80779F785E0FE0187BFE89507B6FD
:107F100000FCFDCF81E187BFE8952CC08437A9F430
:107F200033D032D0182F30D03BD0012FFE017F014B
:107F30008FEFE81AF80A849120D00150F701B9F7C1
:107F400021961150C10FD11D15C0853741F428D09D
:107F50008EE113D085E911D08FE00FD00BC08135B1
:107F600041F488E18093600088E08093600018D03D
:107F700001C016D080E101D05CCF9091C00095FF88
:107F8000FCCF8093C60008958091C00087FFFCCF8E
:107F90008091C00084FD01C0A8958091C60008951D
:107FA000F3DF803239F088E18093600088E08093CD
:107FB0006000FFCF84E1E1CFCF93C82FE5DFC15050
:107FC000E9F7CF91EDCFE0E6F0E098E19083808390
:107FD0000895E0E6F0E088E180831082EE27FF2735
:027FE000099402
:027FFE00040479
:0400000300007E007B
:00000001FF
    )"}
};


/*
 * Table of defined images. The first one matching the chip's signature
 * is used.
 */
const image_t *images[] = {
  &image_328,
};

uint8_t NUMIMAGES = sizeof(images)/sizeof(images[0]);
